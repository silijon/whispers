#!/bin/bash
# Voice to Clipboard Pipeline
# Transcribes voice and copies directly to clipboard

# Source common setup
source "$(dirname "${BASH_SOURCE[0]}")/common.sh"

# Configuration
WHISPER_SERVER="${WHISPER_SERVER:-http://localhost:8080}"
AUDIO_DEVICE="${AUDIO_DEVICE:-0}"
SAMPLE_RATE="${SAMPLE_RATE:-44100}"
GAIN="${GAIN:-26}"
SILENCE_THRESHOLD="${SILENCE_THRESHOLD:-0.05}"
SILENCE_DURATION="${SILENCE_DURATION:-0.80}"

# Parse arguments
while [[ $# -gt 0 ]]; do
    case $1 in
        --device|-d)
            AUDIO_DEVICE="$2"
            shift 2
            ;;
        --list|-l)
            audio_capture.py --list
            exit 0
            ;;
        --help|-h)
            echo "Voice to Clipboard Pipeline"
            echo ""
            echo "Usage: $0 [OPTIONS]"
            echo ""
            echo "Options:"
            echo "  -d, --device ID    Audio device index (interactive if not specified)"
            echo "  -l, --list         List available audio devices and exit"
            echo "  -h, --help        Show this help"
            echo ""
            echo "Examples:"
            echo "  $0                 # Copy transcription to clipboard"
            echo "  $0 -d 0            # Use audio device 0"
            echo "  $0 --list          # List audio devices"
            echo ""
            echo "Say something and it will be transcribed and copied to your clipboard."
            exit 0
            ;;
        *)
            echo "Unknown option: $1"
            exit 1
            ;;
    esac
done

echo "üé§ Voice to Clipboard"
echo "Speak your text, then wait for silence..."
echo ""

# Build audio capture command
AUDIO_CMD="audio_capture.py --sample-rate $SAMPLE_RATE --gain $GAIN"
if [ -n "$AUDIO_DEVICE" ]; then
    AUDIO_CMD="$AUDIO_CMD --device $AUDIO_DEVICE"
fi

# Check for clipboard tools and set up command
if command -v wl-copy >/dev/null 2>&1; then
    CLIPBOARD_CMD="wl-copy"
    echo "Using wl-copy for clipboard (Wayland)"
elif command -v xclip >/dev/null 2>&1; then
    CLIPBOARD_CMD="xclip -selection clipboard"
    echo "Using xclip for clipboard (X11)"
elif command -v pbcopy >/dev/null 2>&1; then
    CLIPBOARD_CMD="pbcopy"
    echo "Using pbcopy for clipboard (macOS)"
else
    echo "‚ùå No clipboard tool found (wl-copy, xclip, or pbcopy)"
    echo "Please install one of these tools to use this script."
    exit 1
fi

# Test audio capture first
echo "Testing audio capture..."
timeout 2s $AUDIO_CMD > /dev/null
if [ $? -ne 124 ]; then  # 124 is timeout's exit code for successful timeout
    echo "‚ùå Audio capture failed. Testing manually:"
    $AUDIO_CMD --help 2>&1 | head -5
    exit 1
fi

echo "‚úì Audio capture working"

# Build transcriber command  
TRANSCRIBER_CMD="streaming_transcriber.py --server $WHISPER_SERVER"
TRANSCRIBER_CMD="$TRANSCRIBER_CMD --silence-threshold $SILENCE_THRESHOLD"
TRANSCRIBER_CMD="$TRANSCRIBER_CMD --silence-duration $SILENCE_DURATION"
TRANSCRIBER_CMD="$TRANSCRIBER_CMD --sample-rate $SAMPLE_RATE --raw-pcm"

# Run the pipeline and copy each transcription to clipboard
$AUDIO_CMD | \
    $TRANSCRIBER_CMD | \
    while IFS= read -r text; do
        if [ -n "$text" ]; then
            echo "üìù Transcribed: $text"
            
            # Copy to clipboard
            echo "$text" | $CLIPBOARD_CMD
            
            if [ $? -eq 0 ]; then
                echo "üìã Copied to clipboard!"
            else
                echo "‚ùå Failed to copy to clipboard"
            fi
            echo ""
        fi
    done
